version: '3'

services:
  database:
    image: postgres:13
    container_name: trans_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "myuser", "-d", "mydatabase"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    container_name: trans_backend
    depends_on:
      database:
        condition: service_healthy
    networks:
      - app-network
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgres://myuser:mypassword@database:5432/mydatabase

  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    container_name: trans_frontend
    volumes:
      - frontend-build:/usr/share/build
    networks:
      - app-network
    #ports:
    #  - "3000:80"
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: trans_nginx
    volumes:
      - frontend-build:/usr/share/nginx/html
    depends_on:
      - backend
      - frontend
    networks:
      - app-network
    ports:
      - "443:443"

volumes:
  postgres_data:
  frontend-build:

networks:
  app-network:
    driver: bridge
